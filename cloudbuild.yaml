steps:
  - name: gcr.io/k8s-skaffold/skaffold:v2.13.1
    id: echo default repo url
    script: |
        #!/bin/bash
        echo "ARTIFACT REGISTRY URL: $_ARTIFACT_REGISTRY_URL"
  - name: 'python:3.12-slim'
    id: Test
    entrypoint: /bin/sh
    args:
    - -c
    - 'pip install -r src/frontend/requirements.txt && python test.py -v'

  - id: download-skaffold-cache
    name: gcr.io/cloud-builders/gsutil # get skaffold build cache
    args: ['cp', $_CACHE_URI/cache, '/workspace/cache']
    timeout: 120s

  - id: 'build-staging-image'
    name: 'gcr.io/k8s-skaffold/skaffold:v2.13.1'
    script: |
        #!/bin/bash
        set -x
        skaffold build -f=skaffold.yaml --default-repo=$_ARTIFACT_REGISTRY_URL --file-output=/workspace/artifacts.json --cache-file=/workspace/cache 
        # skaffold build -f=skaffold.yaml --default-repo=us-central1-docker.pkg.dev/atlantean-wares-426921-j3/ci-cd-demo --file-output=/workspace/artifacts.json --cache-file=/workspace/cache

  - name: gcr.io/cloud-builders/gsutil # upload skaffold build cache
    id: upload-skaffold-cache
    args: ['cp', '/workspace/cache',  $_CACHE_URI/cache]
    timeout: 120s

  - name: gcr.io/cloud-builders/gcloud
    id: trigger-release
    args: 
      - "deploy"
      - "releases"
      - "create"
      - "$_DELIVERY_PIPELINE_NAME-$SHORT_SHA"
      - "--delivery-pipeline=$_DELIVERY_PIPELINE_NAME"
      - "--build-artifacts=/workspace/artifacts.json"
      - "--skaffold-file=skaffold.yaml"
      - "--region=$LOCATION"
      - "--gcs-source-staging-dir=$_SOURCE_STAGING_BUCKET/$SHORT_SHA"

options:
  logging: CLOUD_LOGGING_ONLY